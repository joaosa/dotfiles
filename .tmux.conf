# note: heavily borrowed from https://github.com/square/maximum-awesome
# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
set -g base-index 1

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

# mouse behavior
setw -g mouse on

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# uncomment below stanza to enable smart pane switching with awareness of vim splits
is_vim_or_emacs='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?|emacs.*$"'
bind -n C-h if-shell "$is_vim_or_emacs" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim_or_emacs" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim_or_emacs" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim_or_emacs" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim_or_emacs" "send-keys C-\\" "select-pane -l"

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X rectangle-toggle
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe-and-cancel
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

set-window-option -g display-panes-time 1500

# Status Bar
set-option -g status-interval 1
set-option -g status-left ''
set-option -g status-right '%l:%M%p'
set-option -g status-fg default

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# source tmuxline conf
if-shell "test -f ~/.lightline.conf" "source ~/.lightline.conf"

# tell tmux not to wait
set -sg escape-time 0

# El Capitan issue
# ref https://github.com/tmux/tmux/issues/108
# status bar updates
# tmuxline? https://github.com/itchyny/lightline.vim
set -g status-interval 0

# show rainbarf tmux stats
set -ag status-right '#(rainbarf --tmux --battery --remaining --width 10)'

# tmuxinator
set-window-option -g pane-base-index 1

# disable arrow key pane navigation
unbind Up
unbind Down
unbind Left
unbind Right

# see all sessions
bind-key S choose-session

# toggle pane sync
bind-key C-s setw synchronize-panes

# show if the panes are synced
set -ag status-right '#{?pane_synchronized, #[bg=blue]#[fg=white]SYNC#[default],}'

# runs the last command on all panes
bind-key m setw synchronize-panes on \; send-keys C-c C-m \; send-keys !! C-m \; send-keys C-m \; setw synchronize-panes off

# url view
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

# tmux plugins
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'egel/tmux-gruvbox'

# terminal configuration for true color support
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# ref - https://github.com/tmux-plugins/tpm/blob/master/docs/tpm_not_working.ed
run -b '~/.tmux/plugins/tpm/tpm'
